from aiogram import Bot
from aiogram.fsm.state import StatesGroup, State
from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.context import FSMContext
from db.users import get_user
from utils.admin import get_admin_id, is_coffeemaker_or_admin
from utils.number_utils import to_float
from utils.user_utils import get_user_name
from aiogram.enums import ParseMode
from keyboards.main_menu import get_main_menu
from datetime import date

router = Router()


class CashboxState(StatesGroup):
  entering_operation_type = State()
  entering_cash_balance = State()
  entering_cash_flow = State()


@router.message(F.text.lower() == "–∫–∞—Å—Å–∞")
async def cash_operations_handle(message: Message, state: FSMContext):
  if is_coffeemaker_or_admin(message.from_user.id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üí∞ –û—Å—Ç–∞—Ç–æ–∫", callback_data="cash_balance"),
        InlineKeyboardButton(text="üí∏ –†–∞—Å—Ö–æ–¥", callback_data="cash_flow")
    ]])
    await message.answer("""–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏:
    üí∞ –í–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–æ–∫ –¥–µ–Ω–µ–≥ –≤ –∫–∞—Å—Å–µ
    üí∏ –í–≤–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥ –¥–µ–Ω–µ–≥ –≤ –∫–∞—Å—Å–µ (–Ω–∞ –ø–æ–∫—É–ø–∫—É –∏–ª–∏ –ó–ü)""",
                         reply_markup=keyboard)
    await state.set_state(CashboxState.entering_operation_type)
  else:
    await message.answer("–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω",
                         reply_markup=get_main_menu(message.from_user.id))


@router.callback_query(CashboxState.entering_operation_type)
async def entering_operation_type_handle(query: CallbackQuery,
                                         state: FSMContext, bot: Bot):
  if query.data == "cash_balance":
    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ –æ—Å—Ç–∞—Ç–æ–∫ –¥–µ–Ω–µ–≥ –≤ –∫–∞—Å—Å–µ ‚¨á")
    await state.set_state(CashboxState.entering_cash_balance)
  elif query.data == "cash_flow":
    await query.message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥ –ø–æ –∫–∞—Å—Å–µ ‚¨á")
    await state.set_state(CashboxState.entering_cash_flow)
  else:
    await state.clear()
  await bot.delete_message(chat_id=query.message.chat.id,
                           message_id=query.message.message_id)
  await query.answer()

@router.message(CashboxState.entering_cash_balance)
async def entering_cash_balance_handle(message: Message, state: FSMContext, bot: Bot):
    await state.clear()
    entered_amount = to_float(message.text or '')
    if entered_amount is not None and entered_amount > 0:
      coffeemaker = get_user(message.from_user.id)
      today = date.today().strftime("%d.%m.%Y")
      await bot.send_message(get_admin_id(),
          f"#cash_balance\nüí∞{today}: –ë–∞—Ä–∏—Å—Ç–∞ {get_user_name(coffeemaker)} —É–∫–∞–∑–∞–ª –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ –∫–∞—Å—Å–µ: <b>{entered_amount}</b> ‚ÇΩ", parse_mode=ParseMode.HTML)
      await message.answer("‚úÖ –û—Å—Ç–∞—Ç–æ–∫ –∑–∞–ø–∏—Å–∞–Ω! ‚úÖ")
    else:
      await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! ‚ùå\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")

@router.message(CashboxState.entering_cash_flow)
async def entering_cash_flow_handle(message: Message, state: FSMContext, bot: Bot):
    await state.clear()
    entered_amount = to_float(message.text or '')
    if entered_amount is not None and entered_amount > 0:
      coffeemaker = get_user(message.from_user.id)
      today = date.today().strftime("%d.%m.%Y")
      await bot.send_message(get_admin_id(),
          f"#cash_flow\nüì§{today}: –ë–∞—Ä–∏—Å—Ç–∞ {get_user_name(coffeemaker)} —É–∫–∞–∑–∞–ª —Ä–∞—Å—Ö–æ–¥ –ø–æ –∫–∞—Å—Å–µ: <b>{entered_amount}</b> ‚ÇΩ", parse_mode=ParseMode.HTML)
      await message.answer("‚úÖ –†–∞—Å—Ö–æ–¥ –∑–∞–ø–∏—Å–∞–Ω! ‚úÖ\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —á–µ–∫, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ –±–æ—Ç–µ!")
    else:
      await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! ‚ùå\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!")