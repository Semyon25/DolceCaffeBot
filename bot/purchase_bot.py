from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from utils.code_generator import generate_purchase_code_if_needed
from utils.declension_noun import beverage_declension
from db.purchases import get_count, set_count

router = Router()

@router.message(F.text.lower() == "–∞–∫—Ü–∏—è 6+1")
async def answer_purchase(message: Message, state: FSMContext):
  user_id = message.from_user.id
  count = get_count(user_id)
  code = generate_purchase_code_if_needed(user_id)
  if count is None:
    await message.answer('''<b>–ê–∫—Ü–∏—è 6+1</b>üéÅ

–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—Ç–∫–∞(-–æ–≤) –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ê–ö–¶–ò–Ø 6+1</b> –≤ —á–∞—Ç-–±–æ—Ç–µ, –ø–æ–ª—É—á–∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥
–ù–∞–∑–æ–≤–∏ —ç—Ç–æ—Ç <b>–∫–æ–¥</b> –±–∞—Ä–∏—Å—Ç–∞ üî¢ 

–¢–æ–≥–¥–∞ –∫—É–ø–ª–µ–Ω–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ –±—É–¥—É—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å—Å—è ‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è
–ß–∞—Ç-–±–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏ –≤ —á–µ–∫–µ
* –∫—Ä–æ–º–µ –≤–æ–¥—ã –≤ –±—É—Ç—ã–ª–∫–∞—Ö –∏ –≥–∞–∑–∏—Ä–æ–≤–æ–∫

–ö–æ–≥–¥–∞ –Ω–∞–∫–æ–ø–∏—Ç—Å—è —à–µ—Å—Ç—å –Ω–∞–ø–∏—Ç–∫–æ–≤, —á–∞—Ç-–±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç <b>–∫—É–ø–æ–Ω</b> –Ω–∞ <b>—Å–µ–¥—å–º–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫</b> üéÅ

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–¥ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–∏, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ê–ö–¶–ò–Ø 6+1</b> –≤ –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞'''
                         , parse_mode=ParseMode.HTML) 
    await message.answer(f'<b>–ö–æ–¥: {code}</b>\n\n–ù–∞–∑–æ–≤–∏ —ç—Ç–æ—Ç –∫–æ–¥ –±–∞—Ä–∏—Å—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—Ç–∫–∞(-–æ–≤) üßë‚Äçü¶∞‚òïÔ∏è', parse_mode=ParseMode.HTML)
    set_count(user_id, 0)
  elif count >= 0 and count < 6:
    await message.answer(f'–í—ã –Ω–∞–∫–æ–ø–∏–ª–∏ <b>{count}</b> {beverage_declension(count)} –∏–∑ 6.\n\n<b>–ö–æ–¥: {code}</b>\n–ù–∞–∑–æ–≤–∏ —ç—Ç–æ—Ç –∫–æ–¥ –±–∞—Ä–∏—Å—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—Ç–∫–∞(-–æ–≤) üßë‚Äçü¶∞‚òïÔ∏è', parse_mode=ParseMode.HTML)
  else:
    await message.answer(f'üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b> üéâ\n–í—ã –Ω–∞–∫–æ–ø–∏–ª–∏ —à–µ—Å—Ç—å –Ω–∞–ø–∏—Ç–∫–æ–≤! –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω <b>–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫</b>!‚òï\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, —Å–æ–æ–±—â–∏—Ç–µ –±–∞—Ä–∏—Å—Ç–∞ –∫–æ–¥ <b>{code}</b>', parse_mode=ParseMode.HTML)
                      
                    